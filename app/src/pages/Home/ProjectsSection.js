import React from 'react';
import Markdown from 'markdown-to-jsx';

const logoPrefix = "minimalist  logo";
const imageDimension = 96;
const seedValue = 41 + Math.floor(Math.random() * 3); // Define the seed value here

const projects = {
    llmIntegration: [
        {
            name: "SillyTavern",
            url: "https://docs.sillytavern.app/extensions/stable-diffusion/",
            description: "An **LLM frontend** for power users. Pollinations permits it to generate images.",
            repo: "https://github.com/SillyTavern/SillyTavern"
        },
        {
            name: "Qwen-Agent",
            url: "https://github.com/QwenLM/Qwen-Agent",
            description: "A framework for developing agentic LLM applications.",
        },
        {
            name: "LobeChat",
            url: "https://lobehub.com/plugins/pollinations-drawing",
            description: "An open-source, modern-design ChatGPT/LLMs UI/Framework. Supports speech-synthesis, multi-modal, and extensible (function call) plugin system.",
            repo: "https://github.com/lobehub/lobe-chat"
        },
        {
            name: "DynaSpark AI",
            url: "https://dynaspark.onrender.com",
            description: "An versatile AI assistant with advanced image and text generation capabilities, integrating Pollinations.ai for image generation.",
            author: "Th3-C0der",
            repo: "https://github.com/Th3-C0der"
        },
        {
            name: "FlowGPT",
            url: "https://flowgpt.com/p/instant-image-generation-with-chatgpt-and-pollinationsai",
            description: "Generate images on-demand with **ChatGPT**."
        },
    ],
    socialBots: [
        {
            name: "Discord Bot",
            url: "https://discord.gg/D9xGg8mq3D",
            description: "A **Discord bot** that uses Pollinations.ai for generating images based on user prompts.",
            author: "@Zngzy",
            repo: "https://github.com/Zingzy/pollinations.ai-bot"
        },
        {
            name: "WhatsApp Group",
            url: "https://chat.whatsapp.com/KI37JqT5aYdL9WBYMyyjDV",
            description: "A **WhatsApp group** for that allows you to generate images using Pollinations.ai.",
            author: "@dg_karma"
        },
        {
            name: "Telegram Bot",
            url: "http://t.me/pollinationsbot",
            description: "A **Telegram bot** that uses Pollinations.ai for generating images based on user prompts.",
            author: "Wong Wei Hao"
        },
        {
            name: "Anyai",
            url: "#",
            description: "A **Discord bot** and community that amongst others leverages **Pollinations.ai** for generating AI-driven content.",
            author: "@meow_18838"
        },
        {
            name: "OpenHive",
            url: "https://discord.gg/Zv3SXTF5xy",
            description: "A **Discord server** that bridges the gap between Discord and AI. With Beebot, access dozens of ChatGPT prompts and generate images using Pollinations.ai!",
            author: "@creativegpt"
        },
    ],
    apps: [
        {
            name: "Pollinator Android App",
            url: "https://github.com/g-aggarwal/Pollinator",
            description: "An open-source **Android app** for text-to-image generation using Pollinations.ai's endpoint.",
            author: "@gaurav_87680"
        },
        {
            name: "Own-AI",
            url: "https://own-ai.pages.dev/",
            description: "An AI text-to-image generator powered by Pollinations.ai. Users can describe the images they want, generate them, and share them.",
            author: "Sujal Goswami",
            repo: "https://github.com/sujal-goswami/Own-AI"
        },
        {
            name: "Infinite Tales",
            url: "https://infinite-tales-rpg.vercel.app/",
            description: "A Choose Your Own Adventure RPG, dynamically narrated by AI. Customize your adventure, build your hero, and explore vast lands. Each journey is uniquely generated by AI.",
            author: "JayJayBinks",
            repo: "https://github.com/JayJayBinks/infinite-tales-rpg"
        },
        {
            name: "POLLIPAPER",
            url: "https://github.com/Tolerable/POLLIPAPER",
            description: "A dynamic wallpaper app that uses Pollinations AI to create unique desktop backgrounds. It offers weather-based prompts and customizable settings.",
            author: "@intolerant0ne",
            repo: "https://github.com/Tolerable/"
        },
        {
            name: "StorySight",
            url: "https://github.com/abiral-manandhar/storySight",
            description: "An app to help children with learning disabilities by visualizing abstract concepts. Made using **Django** and **Pollinations.ai**. Submitted to: [Devpost](https://devpost.com/software/storysight)"
        },
        {
            name: "StoryWeaver",
            url: "https://devpost.com/software/storyweaver-013xdw",
            description: "StoryWeaver crafts personalized picture books for children based on themes and prompts you choose, bringing your unique story ideas to life with AI!",
            author: "Advaith Narayanan, Omeed Sabouri, Yufan Wang",
            repo: "https://github.com/AdvaithN1/StoryWeaver"
        },
        {
            name: "Websim",
            url: "https://websim.ai/c/bXsmNE96e3op5rtUS",
            description: "A web simulation tool that integrates **Pollinations.ai** for generating AI-driven content. *Remix* the app with your own promots.",
            author: "@thomash_pollinations"
        },
    ],
    tutorials: [
        {
            name: "Tutorial",
            url: "https://guiadehospedagem.com.br/pollinations-ai/",
            description: "An in-depth Portuguese tutorial on using Pollinations AI.",
            author: "Janderson de Sales",
        }
    ]
};

const generateImageUrl = (name) => `https://pollinations.ai/p/${encodeURIComponent(`${logoPrefix} ${name}`)}?width=${imageDimension}&height=${imageDimension}&nologo=true&seed=${seedValue}`;

const ProjectsSection = () => {
    return (
        <div className="container mx-auto p-4">
            <h2 className="text-2xl font-semibold text-lime mt-4 mb-2 text-center">Chat Integrations</h2>
            <table className="min-w-full bg-white">
                <tbody>
                    {projects.llmIntegration.map((project, index) => (
                        <tr key={index} className="hover:bg-gray-100">
                            <td className="px-4 py-2">
                                <img src={generateImageUrl(project.name)} alt={project.name} className="w-12 h-12 object-cover" />
                            </td>
                            <td className="px-4 py-2">
                                <a href={project.url} target="_blank" rel="noopener noreferrer" className="text-lime font-bold hover:underline">
                                    {project.name}
                                </a>
                                {project.author && (
                                    <span className="ml-2 text-white text-base">by {project.author}</span>
                                )}
                            </td>
                            <td className="px-4 py-2">
                                <span className="text-white text-base">
                                    <Markdown>{project.description}</Markdown>
                                </span>
                                {project.repo && (
                                    <a href={project.repo} target="_blank" rel="noopener noreferrer" className="text-lime hover:underline ml-2">
                                        GitHub
                                    </a>
                                )}
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>

            <h2 className="text-2xl font-semibold text-lime mt-4 mb-2 text-center">Social Bots</h2>
            <table className="min-w-full bg-white">
                <tbody>
                    {projects.socialBots.map((project, index) => (
                        <tr key={index} className="hover:bg-gray-100">
                            <td className="px-4 py-2">
                                <img src={generateImageUrl(project.name)} alt={project.name} className="w-12 h-12 object-cover" />
                            </td>
                            <td className="px-4 py-2">
                                <a href={project.url} target="_blank" rel="noopener noreferrer" className="text-lime font-bold hover:underline">
                                    {project.name}
                                </a>
                                {project.author && (
                                    <span className="ml-2 text-white text-base">by {project.author}</span>
                                )}
                            </td>
                            <td className="px-4 py-2">
                                <span className="text-white text-base">
                                    <Markdown>{project.description}</Markdown>
                                </span>
                                {project.repo && (
                                    <a href={project.repo} target="_blank" rel="noopener noreferrer" className="text-lime hover:underline ml-2">
                                        GitHub
                                    </a>
                                )}
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>

            <h2 className="text-2xl font-semibold text-lime mt-4 mb-2 text-center">Mobile & Web Applications</h2>
            <table className="min-w-full bg-white">
                <tbody>
                    {projects.apps.map((project, index) => (
                        <tr key={index} className="hover:bg-gray-100">
                            <td className="px-4 py-2">
                                <img src={generateImageUrl(project.name)} alt={project.name} className="w-12 h-12 object-cover" />
                            </td>
                            <td className="px-4 py-2">
                                <a href={project.url} target="_blank" rel="noopener noreferrer" className="text-lime font-bold hover:underline">
                                    {project.name}
                                </a>
                                {project.author && (
                                    <span className="ml-2 text-white text-base">by {project.author}</span>
                                )}
                            </td>
                            <td className="px-4 py-2">
                                <span className="text-white text-base">
                                    <Markdown>{project.description}</Markdown>
                                </span>
                                {project.repo && (
                                    <a href={project.repo} target="_blank" rel="noopener noreferrer" className="text-lime hover:underline ml-2">
                                        GitHub
                                    </a>
                                )}
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>

            <h2 className="text-2xl font-semibold text-lime mt-4 mb-2 text-center">Tutorials</h2>
            <table className="min-w-full bg-white">
                <tbody>
                    {projects.tutorials.map((project, index) => (
                        <tr key={index} className="hover:bg-gray-100">
                            <td className="px-4 py-2">
                                <img src={generateImageUrl(project.name)} alt={project.name} className="w-12 h-12 object-cover" />
                            </td>
                            <td className="px-4 py-2">
                                <a href={project.url} target="_blank" rel="noopener noreferrer" className="text-lime font-bold hover:underline">
                                    {project.name}
                                </a>
                                {project.author && (
                                    <span className="ml-2 text-white text-base">by {project.author}</span>
                                )}
                            </td>
                            <td className="px-4 py-2">
                                <span className="text-white text-base">
                                    <Markdown>{project.description}</Markdown>
                                </span>
                                {project.repo && (
                                    <a href={project.repo} target="_blank" rel="noopener noreferrer" className="text-lime hover:underline ml-2">
                                        GitHub
                                    </a>
                                )}
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>

            <p className="text-white text-base text-center mt-8">
                Have you created a project that integrates Pollinations? We'd love to feature it!<br />
                Get in touch at <a href="mailto:hello@pollinations.ai" className="text-lime">hello@pollinations.ai</a>.
            </p>
        </div>
    );
};

export default ProjectsSection;