/**
 * ID Generation Utilities
 * 
 * Provides functions to generate unique IDs compatible with Cloudflare Ray ID format
 * but with Pollinations-specific suffix for internal tracking.
 */

/**
 * Generate a unique ID in the same format as Cloudflare Ray ID but ending with PLN
 * Format: 16 hex characters followed by dash and 3-letter suffix
 * @returns {string} Generated ID in format like "6a1f5c4c0a12b3e4-PLN"
 */
export function generatePollinationsId() {
    const hexChars = '0123456789abcdef';
    let hexPart = '';
    for (let i = 0; i < 16; i++) {
        hexPart += hexChars[Math.floor(Math.random() * 16)];
    }
    return `${hexPart}-PLN`;
}

/**
 * Get or generate an ID from cf-ray header or create a new one
 * @param {string} cfRay - The cf-ray value from request headers
 * @returns {string} Either the cf-ray value or a generated PLN ID
 */
export function getOrGenerateId(cfRay) {
    if (cfRay && cfRay.trim() !== '') {
        return cfRay;
    }
    return generatePollinationsId();
}

/**
 * Check if an ID is a Pollinations-generated ID (ends with -PLN)
 * @param {string} id - The ID to check
 * @returns {boolean} True if the ID was generated by Pollinations
 */
export function isPollinationsId(id) {
    return typeof id === 'string' && id.endsWith('-PLN');
}

/**
 * Check if an ID is a Cloudflare Ray ID format
 * @param {string} id - The ID to check
 * @returns {boolean} True if the ID matches Cloudflare Ray ID format
 */
export function isCloudflareRayId(id) {
    return typeof id === 'string' && /^[0-9a-f]{16}-[A-Z]{3}$/.test(id) && !id.endsWith('-PLN');
}
